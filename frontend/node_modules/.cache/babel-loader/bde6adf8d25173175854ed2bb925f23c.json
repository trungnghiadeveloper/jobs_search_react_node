{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\DACS\\\\job-o-hunt-main\\\\frontend\\\\src\\\\component\\\\recruiter\\\\AcceptedApplicants.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Button, Chip, Grid, IconButton, InputAdornment, makeStyles, Paper, TextField, Typography, Modal, Slider, FormControlLabel, FormGroup, MenuItem, Checkbox, Avatar } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { SetPopupContext } from \"../../App\";\nimport apiList, { server } from \"../../lib/apiList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    height: \"inherit\"\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\"\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\"\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17)\n  }\n}));\n\nconst FilterPopup = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    open,\n    handleClose,\n    searchOptions,\n    setSearchOptions,\n    getData\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    className: classes.popupDialog,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: \"50px\",\n        outline: \"none\",\n        minWidth: \"50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            direction: \"row\",\n            xs: 9,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"name\",\n                  checked: searchOptions.sort[\"jobApplicant.name\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"jobApplicant.name\": { ...searchOptions.sort[\"jobApplicant.name\"],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"name\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"jobApplicant.name\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"jobApplicant.name\": { ...searchOptions.sort[\"jobApplicant.name\"],\n                          desc: !searchOptions.sort[\"jobApplicant.name\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"jobApplicant.name\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"jobTitle\",\n                  checked: searchOptions.sort[\"job.title\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"job.title\": { ...searchOptions.sort[\"job.title\"],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"jobTitle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"jobTitle\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Job Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"job.title\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"job.title\": { ...searchOptions.sort[\"job.title\"],\n                          desc: !searchOptions.sort[\"job.title\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"job.title\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"dateOfJoining\",\n                  checked: searchOptions.sort.dateOfJoining.status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      dateOfJoining: { ...searchOptions.sort.dateOfJoining,\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"dateOfJoining\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"dateOfJoining\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Date of Joining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort.dateOfJoining.status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        dateOfJoining: { ...searchOptions.sort.dateOfJoining,\n                          desc: !searchOptions.sort.dateOfJoining.desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort.dateOfJoining.desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"rating\",\n                  checked: searchOptions.sort[\"jobApplicant.rating\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"jobApplicant.rating\": { ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"rating\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"jobApplicant.rating\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"jobApplicant.rating\": { ...searchOptions.sort[\"jobApplicant.rating\"],\n                          desc: !searchOptions.sort[\"jobApplicant.rating\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"jobApplicant.rating\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              padding: \"10px 50px\"\n            },\n            onClick: () => getData(),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterPopup, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterPopup;\n\nconst ApplicationTile = props => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    application,\n    getData\n  } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios.put(apiList.rating, {\n      rating: rating,\n      applicantId: application.jobApplicant.userId\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: \"Rating updated successfully\"\n      }); // fetchRating();\n\n      getData();\n      setOpen(false);\n    }).catch(err => {\n      // console.log(err.response);\n      console.log(err);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      }); // fetchRating();\n\n      getData();\n      setOpen(false);\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\"\n  };\n\n  const getResume = () => {\n    if (application.jobApplicant.resume && application.jobApplicant.resume !== \"\") {\n      const address = `${application.jobApplicant.resume}`;\n      console.log(address);\n      window.open(address); // axios(address, {\n      //   method: \"GET\",\n      //   responseType: \"blob\",\n      // })\n      //   .then((response) => {\n      //     const file = new Blob([response.data], { type: \"application/pdf\" });\n      //     const fileURL = URL.createObjectURL(file);\n      //     window.open(fileURL);\n      //   })\n      //   .catch((error) => {\n      //     console.log(error);\n      //     setPopup({\n      //       open: true,\n      //       severity: \"error\",\n      //       message: \"Error\",\n      //     });\n      //   });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\"\n      });\n    }\n  };\n\n  const updateStatus = status => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString()\n    };\n    axios.put(address, statusData, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: response.data.message\n      });\n      handleCloseEndJob();\n      getData();\n    }).catch(err => {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n      console.log(err.response);\n      handleCloseEndJob();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.jobTileOuter,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: `${application.jobApplicant.profile}`,\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 7,\n        spacing: 1,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: application.jobApplicant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: application.jobApplicant.rating !== -1 ? application.jobApplicant.rating : null,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Job Title: \", application.job.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Role: \", application.job.jobType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Applied On: \", appliedOn.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"SOP: \", application.sop !== \"\" ? application.sop : \"Not Submitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: application.jobApplicant.skills.map(skill => /*#__PURE__*/_jsxDEV(Chip, {\n            label: skill,\n            style: {\n              marginRight: \"2px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.statusBlock,\n            color: \"primary\",\n            onClick: () => getResume(),\n            children: \"Download Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.statusBlock,\n            style: {\n              background: \"#09BC8A\"\n            },\n            onClick: () => {\n              setOpenEndJob(true);\n            },\n            children: \"End Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.statusBlock,\n            onClick: () => {\n              setOpen(true);\n            },\n            children: \"Rate Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      className: classes.popupDialog,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          outline: \"none\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          minWidth: \"30%\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          name: \"simple-controlled\",\n          style: {\n            marginBottom: \"30px\"\n          },\n          value: rating === -1 ? null : rating,\n          onChange: (event, newValue) => {\n            setRating(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            padding: \"10px 50px\"\n          },\n          onClick: () => changeRating(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openEndJob,\n      onClose: handleCloseEndJob,\n      className: classes.popupDialog,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          outline: \"none\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          minWidth: \"30%\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              style: {\n                padding: \"10px 50px\"\n              },\n              onClick: () => {\n                updateStatus(\"finished\");\n              },\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                padding: \"10px 50px\"\n              },\n              onClick: () => handleCloseEndJob(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ApplicationTile, \"Mc4h7qP52DhWqePTbhXQF1tkSto=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ApplicationTile;\n\nconst AcceptedApplicants = props => {\n  _s3();\n\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false\n      },\n      \"job.title\": {\n        status: false,\n        desc: false\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false\n      }\n    }\n  });\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n    let asc = [],\n        desc = [];\n    Object.keys(searchOptions.sort).forEach(obj => {\n      const item = searchOptions.sort[obj];\n\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios.get(address, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setApplications(response.data);\n    }).catch(err => {\n      console.log(err.response); // console.log(err.response.data);\n\n      setApplications([]);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      style: {\n        padding: \"30px\",\n        minHeight: \"93vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\"\n          },\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setFilterOpen(true),\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        direction: \"column\",\n        style: {\n          width: \"100%\"\n        },\n        alignItems: \"stretch\",\n        justify: \"center\",\n        children: applications.length > 0 ? applications.map(obj => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ApplicationTile, {\n            application: obj,\n            getData: getData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            height: \"50px\",\n            textAlign: \"center\",\n            background: \"rgba(255,255,255,0.5)\",\n            marginLeft: \"25%\",\n            marginRight: \"25%\",\n            paddingTop: \"15px\"\n          },\n          children: \"No Applications Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterPopup, {\n      open: filterOpen,\n      searchOptions: searchOptions,\n      setSearchOptions: setSearchOptions,\n      handleClose: () => setFilterOpen(false),\n      getData: () => {\n        getData();\n        setFilterOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(AcceptedApplicants, \"djKeHbMHOnLXifYyLkhvUwWakOQ=\");\n\n_c3 = AcceptedApplicants;\nexport default AcceptedApplicants;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilterPopup\");\n$RefreshReg$(_c2, \"ApplicationTile\");\n$RefreshReg$(_c3, \"AcceptedApplicants\");","map":{"version":3,"sources":["D:/School/DACS/job-o-hunt-main/frontend/src/component/recruiter/AcceptedApplicants.js"],"names":["useState","useEffect","useContext","Button","Chip","Grid","IconButton","InputAdornment","makeStyles","Paper","TextField","Typography","Modal","Slider","FormControlLabel","FormGroup","MenuItem","Checkbox","Avatar","useParams","Rating","axios","FilterListIcon","ArrowUpwardIcon","ArrowDownwardIcon","SetPopupContext","apiList","server","useStyles","theme","body","height","statusBlock","width","display","alignItems","justifyContent","textTransform","jobTileOuter","padding","margin","boxSizing","popupDialog","avatar","spacing","FilterPopup","props","classes","open","handleClose","searchOptions","setSearchOptions","getData","outline","minWidth","border","borderRadius","sort","status","event","target","checked","desc","dateOfJoining","ApplicationTile","application","setPopup","setOpen","openEndJob","setOpenEndJob","rating","setRating","jobApplicant","appliedOn","Date","dateOfApplication","changeRating","put","applicantId","userId","headers","Authorization","localStorage","getItem","then","response","console","log","data","severity","message","catch","err","handleCloseEndJob","colorSet","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","getResume","resume","address","window","updateStatus","applications","_id","statusData","toISOString","profile","name","job","title","jobType","toLocaleDateString","sop","skills","map","skill","marginRight","background","flexDirection","marginBottom","newValue","AcceptedApplicants","setApplications","filterOpen","setFilterOpen","searchParams","asc","Object","keys","forEach","obj","item","queryString","join","applicants","get","minHeight","color","fontWeight","length","textAlign","marginLeft","paddingTop"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          {}\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"jobTitle\"\n                    checked={searchOptions.sort[\"job.title\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"jobTitle\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"jobTitle\">\n                    <Typography>Job Title</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"job.title\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            desc: !searchOptions.sort[\"job.title\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"job.title\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfJoining\"\n                    checked={searchOptions.sort.dateOfJoining.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfJoining\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfJoining\">\n                    <Typography>Date of Joining</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfJoining.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            desc: !searchOptions.sort.dateOfJoining.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfJoining.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, applicantId: application.jobApplicant.userId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${application.jobApplicant.resume}`;\n      console.log(address);\n      window.open(address)\n      // axios(address, {\n      //   method: \"GET\",\n      //   responseType: \"blob\",\n      // })\n      //   .then((response) => {\n      //     const file = new Blob([response.data], { type: \"application/pdf\" });\n      //     const fileURL = URL.createObjectURL(file);\n      //     window.open(fileURL);\n      //   })\n      //   .catch((error) => {\n      //     console.log(error);\n      //     setPopup({\n      //       open: true,\n      //       severity: \"error\",\n      //       message: \"Error\",\n      //     });\n      //   });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleCloseEndJob();\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n        handleCloseEndJob();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Job Title: {application.job.title}</Grid>\n          <Grid item>Role: {application.job.jobType}</Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {/* {buttonSet[application.status]} */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                background: \"#09BC8A\",\n              }}\n              onClick={() => {\n                setOpenEndJob(true);\n              }}\n            >\n              End Job\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Rate Applicant\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openEndJob}\n        onClose={handleCloseEndJob}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => {\n                  updateStatus(\"finished\");\n                }}\n              >\n                Yes\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseEndJob()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst AcceptedApplicants = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      \"job.title\": {\n        status: false,\n        desc: false,\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Employees</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ height:\"50px\", textAlign: \"center\",\n            background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\"}}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AcceptedApplicants;\n"]},"metadata":{},"sourceType":"module"}