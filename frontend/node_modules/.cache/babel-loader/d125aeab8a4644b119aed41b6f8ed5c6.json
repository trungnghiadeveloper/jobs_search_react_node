{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\DACS\\\\job-o-hunt-main\\\\frontend\\\\src\\\\component\\\\Profile.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Typography, Modal, Paper, makeStyles, TextField, Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport { SetPopupContext } from \"../App\";\nimport apiList, { server } from \"../lib/apiList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    height: \"inherit\"\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\" // padding: \"30px\",\n\n  },\n  avatar: {\n    alignSelf: \"center\",\n    width: theme.spacing(17),\n    height: theme.spacing(17)\n  }\n}));\n\nconst MultifieldInput = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    education,\n    setEducation\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [education.map((obj, key) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      className: classes.inputBox,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: `Institution Name #${key + 1}`,\n          value: education[key].institutionName,\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].institutionName = event.target.value;\n            setEducation(newEdu);\n          },\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Year\",\n          value: obj.startYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].startYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Year\",\n          value: obj.endYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].endYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        alignSelf: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setEducation([...education, {\n          institutionName: \"\",\n          startYear: \"\",\n          endYear: \"\"\n        }]),\n        className: classes.inputBox,\n        children: \"Add another institution details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MultifieldInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultifieldInput;\n\nconst Profile = props => {\n  _s2();\n\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\"\n  });\n  const [education, setEducation] = useState([{\n    institutionName: \"\",\n    startYear: \"\",\n    endYear: \"\"\n  }]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({ ...profileDetails,\n      [key]: value\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios.get(apiList.user, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setProfileDetails(response.data);\n\n      if (response.data.education.length > 0) {\n        setEducation(response.data.education.map(edu => ({\n          institutionName: edu.institutionName ? edu.institutionName : \"\",\n          startYear: edu.startYear ? edu.startYear : \"\",\n          endYear: edu.endYear ? edu.endYear : \"\"\n        })));\n      }\n    }).catch(err => {\n      //console.log(err.response.data);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Error\"\n      });\n    });\n  };\n\n  const getResume = () => {\n    const address = `${profileDetails.resume}`;\n    console.log(address);\n\n    if (address !== \"\") {\n      window.open(address); // console.log(error);\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"You have not uploaded any resume. Upload one to view!\"\n      });\n    } // axios(address, {\n    //   method: \"GET\",\n    //   responseType: \"blob\",\n    // })\n    //   .then((response) => {\n    //     const file = new Blob([response.data], { type: \"application/pdf\" });\n    //     const fileURL = URL.createObjectURL(file);\n    //     window.open(fileURL);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     setPopup({\n    //       open: true,\n    //       severity: \"error\",\n    //       message: \"You have not uploaded any resume. Upload one to view!\",\n    //     });\n    //   });\n\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n    let updatedDetails = { ...profileDetails,\n      education: education.filter(obj => obj.institutionName.trim() !== \"\").map(obj => {\n        if (obj[\"endYear\"] === \"\") {\n          delete obj[\"endYear\"];\n        }\n\n        return obj;\n      })\n    };\n    axios.put(apiList.user, updatedDetails, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: response.data.message\n      });\n      getData();\n    }).catch(err => {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n      console.log(err.response);\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      style: {\n        padding: \"30px\",\n        minHeight: \"93vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            xs: 2,\n            style: {\n              display: \"center\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              float: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: `${profileDetails.profile}`,\n              className: classes.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              component: \"h2\",\n              style: {\n                color: \"#3f51b5\",\n                fontWeight: \"bold\"\n              },\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                value: profileDetails.name,\n                onChange: event => handleInput(\"name\", event.target.value),\n                className: classes.inputBox,\n                variant: \"outlined\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MultifieldInput, {\n              education: education,\n              setEducation: setEducation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ChipInput, {\n                className: classes.inputBox,\n                label: \"Skills\",\n                variant: \"outlined\",\n                helperText: \"Press enter to add skills\",\n                value: profileDetails.skills,\n                onAdd: chip => setProfileDetails({ ...profileDetails,\n                  skills: [...profileDetails.skills, chip]\n                }),\n                onDelete: (chip, index) => {\n                  let skills = profileDetails.skills;\n                  skills.splice(index, 1);\n                  setProfileDetails({ ...profileDetails,\n                    skills: skills\n                  });\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FileUploadInput, {\n                className: classes.inputBox,\n                label: \"Resume (Images only)\",\n                icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this),\n                uploadTo: apiList.uploadResume,\n                handleInput: handleInput,\n                identifier: \"resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: classes.statusBlock,\n                color: \"primary\",\n                onClick: () => getResume(),\n                style: {\n                  alignItems: \"center\"\n                },\n                children: \"View Uploaded Resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FileUploadInput, {\n                className: classes.inputBox,\n                label: \"Profile Photo (.jpg/.png)\",\n                icon: /*#__PURE__*/_jsxDEV(FaceIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 25\n                }, this),\n                uploadTo: apiList.uploadProfileImage,\n                handleInput: handleInput,\n                identifier: \"profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              padding: \"10px 50px\",\n              marginTop: \"30px\",\n              borderRadius: \"8px\",\n              height: \"50px\"\n            },\n            onClick: () => handleUpdate(),\n            children: \"Update Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Profile, \"HeUdAqDKlnQnLgm1CSVmtQXYabw=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Profile;\nexport default Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MultifieldInput\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["D:/School/DACS/job-o-hunt-main/frontend/src/component/Profile.js"],"names":["useContext","useEffect","useState","Button","Grid","Typography","Modal","Paper","makeStyles","TextField","Avatar","axios","ChipInput","FileUploadInput","DescriptionIcon","FaceIcon","SetPopupContext","apiList","server","useStyles","theme","body","height","popupDialog","display","alignItems","justifyContent","avatar","alignSelf","width","spacing","MultifieldInput","props","classes","education","setEducation","map","obj","key","inputBox","institutionName","event","newEdu","target","value","startYear","endYear","Profile","setPopup","userData","setUserData","open","setOpen","profileDetails","setProfileDetails","name","skills","resume","profile","handleInput","getData","get","user","headers","Authorization","localStorage","getItem","then","response","console","log","data","length","edu","catch","err","severity","message","getResume","address","window","handleClose","editDetails","handleUpdate","updatedDetails","filter","trim","put","padding","minHeight","outline","flexDirection","float","color","fontWeight","chip","index","splice","uploadResume","statusBlock","uploadProfileImage","marginTop","borderRadius"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  Avatar,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList, {server} from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n  avatar: {\n    alignSelf:\"center\",\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n   \n  const getResume= ()=>{\n    const address = `${profileDetails.resume}`;\n    console.log(address)\n    if(address!==\"\")\n    {\n      window.open(address)\n      // console.log(error);\n        \n    }else{\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"You have not uploaded any resume. Upload one to view!\",\n      });\n    }\n    \n    // axios(address, {\n    //   method: \"GET\",\n    //   responseType: \"blob\",\n    // })\n    //   .then((response) => {\n    //     const file = new Blob([response.data], { type: \"application/pdf\" });\n    //     const fileURL = URL.createObjectURL(file);\n    //     window.open(fileURL);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     setPopup({\n    //       open: true,\n    //       severity: \"error\",\n    //       message: \"You have not uploaded any resume. Upload one to view!\",\n    //     });\n    //   });\n  }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n  \n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        \n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n                container direction=\"column\" alignItems=\"center\" \n                xs={2}\n                style={{\n                  display:\"center\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  float:\"left\",\n                }}\n              >\n                <Avatar\n                  src={`${profileDetails.profile}`}\n                  className={classes.avatar}\n                  \n                />\n                <Typography variant=\"h3\" component=\"h2\" style={{color:\"#3f51b5\",fontWeight:\"bold\"}}>\n                Profile\n                </Typography>\n              </Grid>\n            <Grid container direction=\"column\" alignItems=\"\" spacing={3}>\n            \n            {/* <Grid item >\n              \n            </Grid> */}\n            \n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (Images only)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n              <Button\n                variant=\"contained\"\n                className={classes.statusBlock}\n                color=\"primary\"\n                onClick={() => getResume()}\n                style={{alignItems:\"center\"}}\n              >\n                View Uploaded Resume\n              </Button>\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n              \n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\",borderRadius:\"8px\",height:\"50px\"}}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}